# The configuration for the normal HTTPS server
server {
	# Set default_server so that real content gets served by default
#	listen 443 default_server;
	listen [::]:443 default_server;
	server_name www.example.com;

	# Boilerplate for SSL, adjust as appropriate.
	ssl on;
	ssl_certificate /etc/ssl/nginx/example.com.crt;
	ssl_certificate_key /etc/ssl/nginx/example.com.key;
	ssl_session_timeout 5m;
	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers !RC4:HIGH:!MD5:!aNULL:!DH;
	ssl_prefer_server_ciphers on;

	# Blah blah blah, normal site specific config
	root /usr/share/nginx/www;
	index index.html index.htm;
	location / {
		index index.html;
	}
}

# Configuration for the reflector
server {
#	listen 443;
	listen [::]:443;

	# This does not need to be a real name, but it MUST be distinct from
	# the host used for real content.
	server_name meek-reflect.example.com;

	# Boilerplate for SSL/TLS (copy/paste from the other server block)
	ssl on;
	ssl_certificate /etc/ssl/nginx/example.com.crt;
	ssl_certificate_key /etc/ssl/nginx/example.com.key;
	ssl_session_timeout 5m;
	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers !RC4:HIGH:!MD5:!aNULL:!DH;
	ssl_prefer_server_ciphers on;

	# This is where the magic happens
	location / {
		# Proxy all traffic received with the meek Host to
		# a meek-server instance.
		proxy_pass https://meek.bamsoftware.com/;

		# Disable logging for the reflector.
		access_log off;
		error_log /dev/null;
	}
}
